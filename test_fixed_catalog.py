#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è
"""
import asyncio
from database.lesson import Lesson
import keyboards as kb
from localization import get_text

async def test_fixed_catalog():
    print("=" * 60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ö–ê–¢–ê–õ–û–ì–ê")
    print("=" * 60)
    
    l = Lesson()
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏
    all_lessons = await l.get_all_lessons(active_only=True)
    print(f"\nüìö –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(all_lessons)}")
    for lesson in all_lessons:
        free_text = "üÜì –ë–ï–°–ü–õ–ê–¢–ù–´–ô" if lesson.get('is_free', False) else f"üí∞ ${lesson.get('price_usd', 0)}"
        print(f"  - ID {lesson['id']}: {lesson['title']} ({free_text})")
    
    # 2. –ü—Ä–∏–º–µ–Ω—è–µ–º –ù–û–í–£–Æ –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ handlers/shop.py
    print(f"\nüîç –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...")
    catalog_lessons = []
    excluded_count = 0
    
    for lesson in all_lessons:
        # –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã
        is_auto_lead_magnet = (
            lesson.get('is_free', False) and 
            lesson.get('title', '').strip() == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
        )
        
        if not is_auto_lead_magnet:
            catalog_lessons.append(lesson)
        else:
            excluded_count += 1
            print(f"    üö´ –ò—Å–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–∏–¥-–º–∞–≥–Ω–∏—Ç: {lesson['title']}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
    print(f"  üìö –£—Ä–æ–∫–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: {len(catalog_lessons)}")
    print(f"  üö´ –ò—Å–∫–ª—é—á–µ–Ω–æ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–æ–≤: {excluded_count}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    if catalog_lessons:
        print(f"\n‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å:")
        try:
            markup = await kb.markup_catalog(catalog_lessons)
            for row in markup.inline_keyboard:
                for button in row:
                    if not button.text.startswith('‚¨ÖÔ∏è'):  # –ù–µ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
                        print(f"  - {button.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {e}")
    else:
        print(f"\n‚ùå –ö–∞—Ç–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º!")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∂–¥—ã–π —Ç–∏–ø —É—Ä–æ–∫–∞
    print(f"\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–∫–∞:")
    for lesson in catalog_lessons:
        is_free_lesson = lesson.get('is_free', False) or float(lesson.get('price_usd', 0)) == 0
        lesson_type = "üÜì –ë–ï–°–ü–õ–ê–¢–ù–´–ô" if is_free_lesson else "üí∞ –ü–õ–ê–¢–ù–´–ô"
        
        print(f"  - {lesson['title']}: {lesson_type}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
        price_usd = float(lesson['price_usd'])
        if lesson.get('is_free', False) or price_usd == 0:
            button_text = f"üéÅ {lesson['title']} (–ë–ï–°–ü–õ–ê–¢–ù–û)"
        else:
            button_text = f"üìö {lesson['title']} (${price_usd:.2f})"
        print(f"    –ö–Ω–æ–ø–∫–∞: {button_text}")
    
    print("\n" + "=" * 60)
    if len(catalog_lessons) > len([l for l in catalog_lessons if not l.get('is_free', False)]):
        print("‚úÖ –£–°–ü–ï–•! –¢–µ–ø–µ—Ä—å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏!")
        print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ - –∞–¥–º–∏–Ω—Å–∫–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ –Ω–µ –ø—Ä–æ–ø–∞–¥–∞—é—Ç!")
    else:
        print("‚ö†Ô∏è –í –∫–∞—Ç–∞–ª–æ–≥–µ —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(test_fixed_catalog())