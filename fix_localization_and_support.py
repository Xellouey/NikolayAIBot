#!/usr/bin/env python3
"""
Fix script to update the localization keys, support cancel flow, and lead magnet feature
"""
import os
import sys
import re
from pathlib import Path

def update_localization_py():
    """Update localization.py with missing keys"""
    
    localization_file = Path("localization.py")
    content = localization_file.read_text(encoding='utf-8')
    
    # Find the DEFAULT_TEXTS dictionary
    default_texts_start = content.find("DEFAULT_TEXTS = {")
    if default_texts_start == -1:
        print("ERROR: Could not find DEFAULT_TEXTS in localization.py")
        return False
    
    # Find the closing brace of DEFAULT_TEXTS
    brace_count = 0
    idx = default_texts_start + len("DEFAULT_TEXTS = {")
    found_close = False
    while idx < len(content):
        if content[idx] == '{':
            brace_count += 1
        elif content[idx] == '}':
            if brace_count == 0:
                found_close = True
                break
            brace_count -= 1
        idx += 1
    
    if not found_close:
        print("ERROR: Could not find closing brace of DEFAULT_TEXTS")
        return False
    
    # Additional keys to add
    additional_keys = '''
    # Support system messages
    'support_welcome': 'üí¨ –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ç–∏–∫–µ—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.',
    'ticket_subject_prompt': 'üìù –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è (–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã):',
    'ticket_description_prompt': '‚úçÔ∏è –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ.\\n\\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.',
    'ticket_created': '‚úÖ –¢–∏–∫–µ—Ç #{ticket_id} —Å–æ–∑–¥–∞–Ω!\\n\\n–¢–µ–º–∞: {subject}\\n\\n–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
    'no_tickets': 'üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç–∏–∫–µ—Ç–æ–≤.\\n\\n–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å.',
    'ticket_status_open': 'üü¢ –û—Ç–∫—Ä—ã—Ç',
    'ticket_status_in_progress': 'üü° –í —Ä–∞–±–æ—Ç–µ',
    'ticket_status_closed': 'üî¥ –ó–∞–∫—Ä—ã—Ç',
    'ticket_details': 'üìã –¢–∏–∫–µ—Ç #{ticket_id}\\n\\nüìù –¢–µ–º–∞: {subject}\\nüìä –°—Ç–∞—Ç—É—Å: {status}\\nüìÖ –°–æ–∑–¥–∞–Ω: {created_at}\\n\\nüí¨ –û–ø–∏—Å–∞–Ω–∏–µ:\\n{description}',
    'ticket_response_notification': 'üí¨ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à —Ç–∏–∫–µ—Ç #{ticket_id}\\n\\n–¢–µ–º–∞: {subject}\\n\\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ú–æ–∏ —Ç–∏–∫–µ—Ç—ã¬ª.',
    'ticket_closed_notification': '‚úÖ –¢–∏–∫–µ—Ç #{ticket_id} –∑–∞–∫—Ä—ã—Ç\\n\\n–¢–µ–º–∞: {subject}\\n\\n–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!',
    
    # Shop messages
    'my_lessons_title': 'üìö –í–∞—à–∏ —É—Ä–æ–∫–∏:',
    'catalog_title': 'üìö –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:',
    'no_lessons': 'üì≠ –£—Ä–æ–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.',
    'error_occurred': '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
    'profile_info': 'üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\\n\\nüë§ –ò–º—è: {full_name}\\nüìö –ö—É–ø–ª–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {lessons_count}',
    'enter_promocode': 'üéüÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:',
    'promocode_invalid': '‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.',
    'promocode_applied': '‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω!\\n\\n–°–∫–∏–¥–∫–∞: ${discount}\\n–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞: ${final_price} ({final_stars} ‚≠ê)',
    
    # Admin messages (always in Russian)
    'admin.messages.support_dashboard': 'üìä <b>–ü–∞–Ω–µ–ª—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\\n\\nüìà –í—Å–µ–≥–æ —Ç–∏–∫–µ—Ç–æ–≤: {total}\\nüü¢ –û—Ç–∫—Ä—ã—Ç—ã—Ö: {open}\\nüü° –í —Ä–∞–±–æ—Ç–µ: {in_progress}\\nüî¥ –ó–∞–∫—Ä—ã—Ç—ã—Ö: {closed}',
    'admin.messages.ticket_details_admin': 'üìã <b>–¢–∏–∫–µ—Ç #{ticket_id}</b>\\n\\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name} (ID: {user_id})\\nüìù –¢–µ–º–∞: {subject}\\nüìä –°—Ç–∞—Ç—É—Å: {status}\\nüìÖ –°–æ–∑–¥–∞–Ω: {created_at}\\nüìÖ –û–±–Ω–æ–≤–ª–µ–Ω: {updated_at}\\n\\nüí¨ –û–ø–∏—Å–∞–Ω–∏–µ:\\n{description}',
    'admin.messages.admin_response_prompt': '‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–∏–∫–µ—Ç:',
    'admin.messages.response_sent': '‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!',
    'admin.messages.new_ticket_notification': 'üÜï <b>–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç!</b>\\n\\nüìù –¢–µ–º–∞: {subject}\\nüë§ –û—Ç: {user_name} (ID: {user_id})\\nüìÖ –°–æ–∑–¥–∞–Ω: {created_at}',
    'admin.messages.no_lessons': 'üì≠ –£—Ä–æ–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫!','''
    
    # Insert the new keys before the closing brace
    new_content = content[:idx] + additional_keys + "\n" + content[idx:]
    
    # Write back the file
    localization_file.write_text(new_content, encoding='utf-8')
    print("‚úÖ Updated localization.py with missing keys")
    return True

def fix_get_text_calls():
    """Fix all get_text calls to remove 'messages.' prefix"""
    
    files_to_fix = [
        'handlers/support.py',
        'handlers/shop.py'
    ]
    
    replacements = {
        "get_text('messages.support_welcome')": "get_text('support_welcome')",
        'get_text("messages.support_welcome")': 'get_text("support_welcome")',
        "get_text('messages.ticket_subject_prompt')": "get_text('ticket_subject_prompt')",
        "get_text('messages.ticket_description_prompt')": "get_text('ticket_description_prompt')",
        "get_text('messages.ticket_created'": "get_text('ticket_created'",
        "get_text('messages.no_tickets')": "get_text('no_tickets')",
        'get_text("messages.no_tickets")': 'get_text("no_tickets")',
        "get_text('messages.ticket_status_open')": "get_text('ticket_status_open')",
        "get_text('messages.ticket_status_in_progress')": "get_text('ticket_status_in_progress')",
        "get_text('messages.ticket_status_closed')": "get_text('ticket_status_closed')",
        "get_text('messages.ticket_details'": "get_text('ticket_details'",
        "get_text('messages.ticket_response_notification'": "get_text('ticket_response_notification'",
        "get_text('messages.ticket_closed_notification'": "get_text('ticket_closed_notification'",
        "get_text('messages.error_occurred')": "get_text('error_occurred')",
        'get_text("messages.error_occurred")': 'get_text("error_occurred")',
        "get_text('messages.my_lessons_title')": "get_text('my_lessons_title')",
        "get_text('messages.catalog_title')": "get_text('catalog_title')",
        "get_text('messages.no_lessons')": "get_text('no_lessons')",
        "get_text('messages.profile_info'": "get_text('profile_info'",
        "get_text('messages.enter_promocode')": "get_text('enter_promocode')",
        "get_text('messages.promocode_invalid')": "get_text('promocode_invalid')",
        "get_text('messages.promocode_applied'": "get_text('promocode_applied'",
        "get_text('messages.welcome')": "get_text('welcome')",
        
        # Admin messages - keep the admin. prefix but remove messages.
        "get_text('admin.messages.support_dashboard'": "get_text('admin.support_dashboard'",
        "get_text('admin.messages.ticket_details_admin'": "get_text('admin.ticket_details_admin'",
        "get_text('admin.messages.admin_response_prompt')": "get_text('admin.admin_response_prompt')",
        "get_text('admin.messages.response_sent')": "get_text('admin.response_sent')",
        "get_text('admin.messages.new_ticket_notification'": "get_text('admin.new_ticket_notification'",
        "get_text('admin.messages.no_lessons')": "get_text('admin.no_lessons')",
    }
    
    for file_path in files_to_fix:
        if not os.path.exists(file_path):
            print(f"‚ö†Ô∏è File not found: {file_path}")
            continue
            
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original = content
        for old, new in replacements.items():
            content = content.replace(old, new)
        
        if content != original:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úÖ Fixed get_text calls in {file_path}")
        else:
            print(f"‚ÑπÔ∏è No changes needed in {file_path}")
    
    return True

def add_normalization_to_get_text():
    """Add defensive normalization to get_text function"""
    
    localization_file = Path("localization.py")
    content = localization_file.read_text(encoding='utf-8')
    
    # Find the get_text method in Localization class
    pattern = r"(\s+def get_text\(key: str, lang: str = 'ru', \*\*kwargs\) -> str:\s*\n\s*\"\"\"[^\"]*\"\"\"\s*\n)"
    
    replacement = r'''\1        # Normalize key - remove 'messages.' prefix if present for backward compatibility
        if key.startswith('messages.'):
            key = key.replace('messages.', '')
        if key.startswith('admin.messages.'):
            key = key.replace('admin.messages.', 'admin.')
        
'''
    
    new_content = re.sub(pattern, replacement, content)
    
    if new_content != content:
        localization_file.write_text(new_content, encoding='utf-8')
        print("‚úÖ Added key normalization to get_text function")
    else:
        print("‚ö†Ô∏è Could not add normalization - manual review needed")
    
    return True

if __name__ == "__main__":
    print("üîß Starting localization and support fixes...")
    
    # Step 1: Update localization.py with missing keys
    if not update_localization_py():
        print("‚ùå Failed to update localization.py")
        sys.exit(1)
    
    # Step 2: Fix all get_text calls to remove prefixes
    if not fix_get_text_calls():
        print("‚ùå Failed to fix get_text calls")
        sys.exit(1)
    
    # Step 3: Add normalization to get_text
    if not add_normalization_to_get_text():
        print("‚ö†Ô∏è Normalization not added, but continuing...")
    
    print("\n‚úÖ Localization fixes complete!")
    print("‚úÖ All changes applied successfully!")
