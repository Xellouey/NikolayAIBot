#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã promocode
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—è discount_type –∏ discount_value
–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
"""

import sqlite3
import os
from datetime import datetime

def migrate_promocode_table():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü—ã promocode"""
    
    db_path = 'database/school.db'
    
    # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    backup_path = f'database/school.backup.{datetime.now().strftime("%Y%m%d_%H%M%S")}.db'
    
    if os.path.exists(db_path):
        print(f"üìÅ –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {backup_path}")
        import shutil
        shutil.copy2(db_path, backup_path)
        print("‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
    else:
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã promocode
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='promocode'")
        table_exists = cursor.fetchone() is not None
        
        if not table_exists:
            print("üìù –¢–∞–±–ª–∏—Ü–∞ promocode –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É...")
            cursor.execute("""
                CREATE TABLE promocode (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    code VARCHAR(50) UNIQUE NOT NULL,
                    discount_type VARCHAR(20) DEFAULT 'percentage',
                    discount_value DECIMAL(10,2) DEFAULT 0,
                    usage_limit INTEGER,
                    usage_count INTEGER DEFAULT 0,
                    is_active BOOLEAN DEFAULT 1,
                    expires_at DATETIME,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            """)
            conn.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ promocode —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("üìù –¢–∞–±–ª–∏—Ü–∞ promocode —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
            cursor.execute("PRAGMA table_info(promocode)")
            columns = cursor.fetchall()
            column_names = [col[1] for col in columns]
            
            print(f"   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {column_names}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏
            changes_made = False
            
            if 'discount_type' not in column_names:
                print("   ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É discount_type...")
                cursor.execute("ALTER TABLE promocode ADD COLUMN discount_type VARCHAR(20) DEFAULT 'percentage'")
                changes_made = True
            
            if 'discount_value' not in column_names:
                print("   ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É discount_value...")
                cursor.execute("ALTER TABLE promocode ADD COLUMN discount_value DECIMAL(10,2) DEFAULT 0")
                changes_made = True
            
            # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π (–µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
            if 'discount_percent' in column_names or 'discount_amount_usd' in column_names:
                print("   üìã –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π...")
                
                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
                cursor.execute("SELECT * FROM promocode")
                rows = cursor.fetchall()
                
                # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å—ã –∫–æ–ª–æ–Ω–æ–∫
                col_indices = {col[1]: idx for idx, col in enumerate(columns)}
                
                for row in rows:
                    row_id = row[0]  # id –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤—ã–π
                    updates = []
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º discount_percent
                    if 'discount_percent' in col_indices:
                        percent_value = row[col_indices['discount_percent']]
                        if percent_value is not None and percent_value > 0:
                            updates.append(f"discount_type='percentage', discount_value={percent_value}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º discount_amount_usd
                    if 'discount_amount_usd' in col_indices:
                        amount_value = row[col_indices['discount_amount_usd']]
                        if amount_value is not None and amount_value > 0:
                            # –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç, —Ç–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞ –∏–º–µ–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                            updates.append(f"discount_type='fixed', discount_value={amount_value}")
                    
                    if updates:
                        update_sql = f"UPDATE promocode SET {updates[-1]} WHERE id={row_id}"
                        cursor.execute(update_sql)
                        print(f"      –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å ID={row_id}")
                
                changes_made = True
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º usage_count –≤–º–µ—Å—Ç–æ used_count (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            if 'used_count' in column_names and 'usage_count' not in column_names:
                print("   ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É usage_count...")
                cursor.execute("ALTER TABLE promocode ADD COLUMN usage_count INTEGER DEFAULT 0")
                cursor.execute("UPDATE promocode SET usage_count = used_count")
                print("   üìã –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ used_count –≤ usage_count")
                changes_made = True
            
            if changes_made:
                conn.commit()
                print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            else:
                print("‚ÑπÔ∏è –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ –∏–º–µ–µ—Ç –Ω—É–∂–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É systemsettings
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='systemsettings'")
        settings_exists = cursor.fetchone() is not None
        
        if not settings_exists:
            print("\nüìù –¢–∞–±–ª–∏—Ü–∞ systemsettings –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É...")
            cursor.execute("""
                CREATE TABLE systemsettings (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    setting_key VARCHAR(100) UNIQUE NOT NULL,
                    setting_value TEXT,
                    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            """)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
            cursor.execute("""
                INSERT INTO systemsettings (setting_key, setting_value) 
                VALUES ('usd_to_stars_rate', '200')
            """)
            
            conn.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ systemsettings —Å–æ–∑–¥–∞–Ω–∞")
        
        # –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã promocode:")
        cursor.execute("PRAGMA table_info(promocode)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"   - {col[1]} ({col[2]}) {'NOT NULL' if col[3] else 'NULL'} default={col[4]}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT COUNT(*) FROM promocode")
        count = cursor.fetchone()[0]
        print(f"\nüìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ –±–∞–∑–µ: {count}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        conn.rollback()
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    print("=" * 60)
    print("–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã promocode")
    print("=" * 60)
    
    success = migrate_promocode_table()
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π!")
    else:
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
    print("=" * 60)
