"""
üß™ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —É—Ä–æ–∫–æ–≤ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.lesson import Lesson, Purchase
from database.sql import configure_database

async def test_lesson_handlers():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —É—Ä–æ–∫–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —É—Ä–æ–∫–æ–≤...")
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        configure_database()
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã
        lesson_manager = Lesson()
        purchase_manager = Purchase()
        
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–∫–∞ –ø–æ ID
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–∫–∞ –ø–æ ID...")
        lesson = await lesson_manager.get_lesson(1)
        if lesson:
            print(f"‚úÖ –£—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω: {lesson.title}")
            print(f"   –¶–µ–Ω–∞: ${lesson.price_usd}")
            print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {lesson.is_active}")
            print(f"   –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: {lesson.is_free}")
        else:
            print("‚ùå –£—Ä–æ–∫ —Å ID 1 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤...")
        lessons = await lesson_manager.get_all_lessons(active_only=True)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(lessons)}")
        for lesson in lessons:
            print(f"   ‚Ä¢ {lesson['title']} (ID: {lesson['id']})")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∞–¥–µ–Ω–∏—è —É—Ä–æ–∫–æ–º
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–ª–∞–¥–µ–Ω–∏—è —É—Ä–æ–∫–æ–º...")
        test_user_id = 123456789
        has_lesson = await purchase_manager.check_user_has_lesson(test_user_id, 1)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user_id} –≤–ª–∞–¥–µ–µ—Ç —É—Ä–æ–∫–æ–º 1: {has_lesson}")
        
        # –¢–µ—Å—Ç 4: –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤...")
        await lesson_manager.increment_views(1)
        print("‚úÖ –°—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —É–≤–µ–ª–∏—á–µ–Ω")
        
        print("\nüéØ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Ä–æ–∫–æ–≤ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    asyncio.run(test_lesson_handlers())