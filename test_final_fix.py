#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
"""
import asyncio
from database.lesson import Lesson
import keyboards as kb
from localization import get_text

async def final_test():
    print("=" * 70)
    print("üéØ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–ê–¢–ê–õ–û–ì–ê")
    print("=" * 70)
    
    l = Lesson()
    
    # 1. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\nüìä –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
    all_lessons = await l.get_all_lessons(active_only=True)
    print(f"–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(all_lessons)}")
    
    for lesson in all_lessons:
        free_status = "üÜì –ë–ï–°–ü–õ–ê–¢–ù–´–ô" if lesson.get('is_free', False) else f"üí∞ ${lesson.get('price_usd', 0)}"
        print(f"  ‚Ä¢ ID {lesson['id']}: {lesson['title']} ({free_status})")
    
    # 2. –°–¢–ê–†–ê–Ø –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
    print(f"\n‚ùå –°–¢–ê–†–ê–Ø –õ–û–ì–ò–ö–ê (–î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø):")
    old_paid_lessons = [lesson for lesson in all_lessons if not lesson.get('is_free', False)]
    print(f"–ü–æ–∫–∞–∑—ã–≤–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–Ω—ã–µ: {len(old_paid_lessons)} –∏–∑ {len(all_lessons)}")
    for lesson in old_paid_lessons:
        print(f"  ‚Ä¢ {lesson['title']} (${lesson.get('price_usd', 0)})")
    
    # 3. –ù–û–í–ê–Ø –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)  
    print(f"\n‚úÖ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê (–ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø):")
    new_catalog_lessons = []
    excluded_count = 0
    
    for lesson in all_lessons:
        # –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
        is_auto_lead_magnet = (
            lesson.get('is_free', False) and 
            lesson.get('title', '').strip() == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
        )
        
        if not is_auto_lead_magnet:
            new_catalog_lessons.append(lesson)
        else:
            excluded_count += 1
            print(f"    üö´ –ò—Å–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–ª–∏–¥-–º–∞–≥–Ω–∏—Ç: {lesson['title']}")
    
    print(f"–¢–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è: {len(new_catalog_lessons)} –∏–∑ {len(all_lessons)} —É—Ä–æ–∫–æ–≤")
    print(f"–ò—Å–∫–ª—é—á–µ–Ω–æ –∞–≤—Ç–æ–ª–∏–¥-–º–∞–≥–Ω–∏—Ç–æ–≤: {excluded_count}")
    
    # 4. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
    print(f"\nüìö –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ù–û–í–û–ì–û –ö–ê–¢–ê–õ–û–ì–ê:")
    platform_lessons = {"–ø–ª–∞—Ç–Ω—ã–µ": [], "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ_–∞–¥–º–∏–Ω—Å–∫–∏–µ": []}
    
    for lesson in new_catalog_lessons:
        is_free = lesson.get('is_free', False) or float(lesson.get('price_usd', 0)) == 0
        if is_free:
            platform_lessons["–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ_–∞–¥–º–∏–Ω—Å–∫–∏–µ"].append(lesson)
        else:
            platform_lessons["–ø–ª–∞—Ç–Ω—ã–µ"].append(lesson)
    
    print(f"  üìà –ü–ª–∞—Ç–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(platform_lessons['–ø–ª–∞—Ç–Ω—ã–µ'])}")
    for lesson in platform_lessons["–ø–ª–∞—Ç–Ω—ã–µ"]:
        print(f"    üí∞ {lesson['title']} (${lesson.get('price_usd', 0)})")
    
    print(f"  üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∞–¥–º–∏–Ω—Å–∫–∏—Ö —É—Ä–æ–∫–æ–≤: {len(platform_lessons['–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ_–∞–¥–º–∏–Ω—Å–∫–∏–µ'])}")
    for lesson in platform_lessons["–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ_–∞–¥–º–∏–Ω—Å–∫–∏–µ"]:
        print(f"    üÜì {lesson['title']} (–ë–ï–°–ü–õ–ê–¢–ù–û)")
    
    # 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    print(f"\n‚å®Ô∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–õ–ê–í–ò–ê–¢–£–†–´:")
    try:
        if new_catalog_lessons:
            markup = await kb.markup_catalog(new_catalog_lessons)
            print("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –ê–Ω–∞–ª–∏–∑ –∫–Ω–æ–ø–æ–∫
            button_count = 0
            for row in markup.inline_keyboard:
                for button in row:
                    if not button.text.startswith('‚¨ÖÔ∏è'):  # –ù–µ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
                        button_count += 1
                        if "–ë–ï–°–ü–õ–ê–¢–ù–û" in button.text:
                            print(f"  üéÅ {button.text}")
                        else:
                            print(f"  üí∞ {button.text}")
            
            print(f"–í—Å–µ–≥–æ –∫–Ω–æ–ø–æ–∫ —É—Ä–æ–∫–æ–≤: {button_count}")
        else:
            print("‚ùå –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç–æ–π!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {e}")
    
    # 6. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\n" + "=" * 70)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("=" * 70)
    
    old_count = len(old_paid_lessons)
    new_count = len(new_catalog_lessons)
    free_count = len(platform_lessons["–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ_–∞–¥–º–∏–Ω—Å–∫–∏–µ"])
    
    print(f"‚úÖ –î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø: {old_count} —É—Ä–æ–∫–æ–≤ (—Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–Ω—ã–µ)")
    print(f"‚úÖ –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø: {new_count} —É—Ä–æ–∫–æ–≤ ({new_count - free_count} –ø–ª–∞—Ç–Ω—ã—Ö + {free_count} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö)")
    
    if free_count > 0:
        print(f"\nüéâ –£–°–ü–ï–•! –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ!")
        print(f"üîß –ü—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞: –∞–¥–º–∏–Ω—Å–∫–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–ø–∞–¥–∞—é—Ç!")
    else:
        print(f"\n‚ÑπÔ∏è –í –±–∞–∑–µ –Ω–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∞–¥–º–∏–Ω—Å–∫–∏—Ö —É—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    print(f"\nüí° –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´:")
    print(f"   ‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –í–°–ï —É—Ä–æ–∫–∏ (–ø–ª–∞—Ç–Ω—ã–µ + –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ)")
    print(f"   ‚Ä¢ –ò—Å–∫–ª—é—á–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫'")
    print(f"   ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–æ–º —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ üéÅ –ë–ï–°–ü–õ–ê–¢–ù–û")
    
    print("=" * 70)

if __name__ == "__main__":
    asyncio.run(final_test())