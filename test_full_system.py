"""
üß™ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.user import User
from database.lesson import Lesson, Purchase
from database.sql import configure_database

async def test_full_system():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    print("=" * 60)
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        configure_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã
        user_manager = User()
        lesson_manager = Lesson()
        purchase_manager = Purchase()
        
        # 1. –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 123456789
        user_data = await user_manager.get_user(test_user_id)
        
        if user_data:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user_data.get('full_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   Onboarding –∑–∞–≤–µ—Ä—à–µ–Ω: {user_data.get('onboarding_completed', False)}")
        else:
            print("‚ÑπÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º...")
            try:
                await user_manager.create_user(test_user_id, "test_user", "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
        
        # 2. –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —É—Ä–æ–∫–∞–º–∏
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è —É—Ä–æ–∫–æ–≤...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏
        lessons = await lesson_manager.get_all_lessons(active_only=True)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(lessons)}")
        
        for lesson in lessons:
            print(f"   ‚Ä¢ {lesson['title']} (ID: {lesson['id']}) - ${lesson['price_usd']}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—Ä–æ–∫–∞
        if lessons:
            first_lesson_id = lessons[0]['id']
            lesson_detail = await lesson_manager.get_lesson(first_lesson_id)
            if lesson_detail:
                print(f"‚úÖ –î–µ—Ç–∞–ª–∏ —É—Ä–æ–∫–∞ {first_lesson_id}: {lesson_detail.title}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —É—Ä–æ–∫–∞ {first_lesson_id}")
        
        # 3. –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∫—É–ø–∫–∞–º–∏
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –ø–æ–∫—É–ø–æ–∫...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–Ω–∏–µ —É—Ä–æ–∫–∞–º–∏
        if lessons:
            for lesson in lessons:
                has_lesson = await purchase_manager.check_user_has_lesson(test_user_id, lesson['id'])
                status = "–≤–ª–∞–¥–µ–µ—Ç" if has_lesson else "–Ω–µ –≤–ª–∞–¥–µ–µ—Ç"
                print(f"   ‚Ä¢ –£—Ä–æ–∫ {lesson['id']}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {status}")
        
        # 4. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (—Å–∏–º—É–ª—è—Ü–∏—è)
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (—Å–∏–º—É–ª—è—Ü–∏—è)...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º callback –¥–∞–Ω–Ω—ã–µ
        callback_patterns = [
            "catalog",
            "lesson:1",
            "lesson:2", 
            "my_lessons",
            "profile",
            "support"
        ]
        
        for pattern in callback_patterns:
            try:
                if pattern == "catalog":
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º show_catalog
                    catalog_lessons = await lesson_manager.get_all_lessons(active_only=True)
                    print(f"   ‚Ä¢ {pattern}: ‚úÖ ({len(catalog_lessons)} —É—Ä–æ–∫–æ–≤)")
                    
                elif pattern.startswith("lesson:"):
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º show_lesson_details
                    lesson_id = int(pattern.split(':')[1])
                    lesson_data = await lesson_manager.get_lesson(lesson_id)
                    if lesson_data:
                        print(f"   ‚Ä¢ {pattern}: ‚úÖ (—É—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω)")
                    else:
                        print(f"   ‚Ä¢ {pattern}: ‚ùå (—É—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω)")
                        
                elif pattern == "my_lessons":
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º show_my_lessons
                    purchases = await purchase_manager.get_user_purchases(test_user_id)
                    print(f"   ‚Ä¢ {pattern}: ‚úÖ ({len(purchases)} –ø–æ–∫—É–ø–æ–∫)")
                    
                else:
                    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                    print(f"   ‚Ä¢ {pattern}: ‚úÖ (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ—Ç–æ–≤)")
                    
            except Exception as e:
                print(f"   ‚Ä¢ {pattern}: ‚ùå ({e})")
        
        # 5. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\n5Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç
        all_users = await user_manager.get_all_users()
        total_lessons = await lesson_manager.get_all_lessons(active_only=False)
        
        print(f"   üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"      ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(all_users)}")
        print(f"      ‚Ä¢ –£—Ä–æ–∫–æ–≤: {len(total_lessons)}")
        print(f"      ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len([l for l in total_lessons if l['is_active']])}")
        print(f"      ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len([l for l in total_lessons if l['is_free']])}")
        
        print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –í—Å–µ –º–æ–¥–µ–ª–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ") 
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ")
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–∞")
        
        print("\nüí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("ü§ñ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    success = asyncio.run(test_full_system())
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
        sys.exit(1)