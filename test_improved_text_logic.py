#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤ —Å fallback –Ω–∞ description
"""
import asyncio
from database.lesson import Lesson

async def test_text_lesson_logic():
    print("=" * 70)
    print("üß™ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ô –õ–û–ì–ò–ö–ò –î–õ–Ø –¢–ï–ö–°–¢–û–í–´–• –£–†–û–ö–û–í")
    print("=" * 70)
    
    l = Lesson()
    
    print("\nüìö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –£–†–û–ö–û–í –° –ù–û–í–û–ô –õ–û–ì–ò–ö–û–ô:")
    
    all_lessons = await l.get_all_lessons(active_only=False)
    
    for lesson in all_lessons:
        lesson_data = await l.get_lesson(lesson['id'])
        if not lesson_data:
            continue
            
        print(f"\nüîç –£–†–û–ö ID {lesson_data.id}: '{lesson_data.title}'")
        print(f"   ‚Ä¢ content_type: {lesson_data.content_type}")
        print(f"   ‚Ä¢ description: {'‚úÖ –ï—Å—Ç—å' if lesson_data.description else '‚ùå –ù–µ—Ç'}")
        print(f"   ‚Ä¢ text_content: {'‚úÖ –ï—Å—Ç—å' if lesson_data.text_content else '‚ùå –ù–µ—Ç'}")
        print(f"   ‚Ä¢ video_file_id: {'‚úÖ –ï—Å—Ç—å' if lesson_data.video_file_id else '‚ùå –ù–µ—Ç'}")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É
        if lesson_data.content_type == 'video' and lesson_data.video_file_id:
            result = "üé• –í–ò–î–ï–û: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞"
        elif lesson_data.content_type == 'text':
            # –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤
            if lesson_data.text_content:
                result = f"üìù –¢–ï–ö–°–¢: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è text_content"
            elif lesson_data.description:
                result = f"üìù FALLBACK: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è description –∫–∞–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"
            else:
                result = f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –Ω–∏ text_content, –Ω–∏ description"
        elif lesson_data.content_type == 'video' and not lesson_data.video_file_id:
            result = "‚ùå –í–ò–î–ï–û –û–¢–°–£–¢–°–¢–í–£–ï–¢: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤–∏–¥–µ–æ"
        else:
            result = f"‚ùì –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –¢–ò–ü: {lesson_data.content_type}"
        
        print(f"   ‚Ä¢ –†–ï–ó–£–õ–¨–¢–ê–¢: {result}")
    
    print(f"\n" + "="*50)
    print("üéØ –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –£–†–û–ö–ê '123':")
    print("="*50)
    
    lesson_123 = await l.get_lesson(5)
    if lesson_123:
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {lesson_123.title}")
        print(f"content_type: {lesson_123.content_type}")
        print(f"description: '{lesson_123.description}'")
        print(f"text_content: '{lesson_123.text_content or '–ù–ï–¢'}'")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É
        if lesson_123.content_type == 'text':
            if lesson_123.text_content:
                content_text = lesson_123.text_content
                source = "text_content"
            elif lesson_123.description:
                content_text = f"üìù {lesson_123.description}"
                source = "description (fallback)"
            else:
                content_text = "üìù –í —ç—Ç–æ–º —É—Ä–æ–∫–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"
                source = "error message"
        
        print(f"\nüí¨ –¢–ï–ü–ï–†–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –£–í–ò–î–ò–¢:")
        print(f"üìö {lesson_123.title}")
        print(f"{content_text}")
        print(f"\n‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {source}")
        
        if source == "description (fallback)":
            print("üéâ –û–¢–õ–ò–ß–ù–û! –¢–µ–ø–µ—Ä—å description –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —É—Ä–æ–∫–∞!")
    
    print("\n" + "="*70)
    print("üéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("–¢–µ–ø–µ—Ä—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤ –±–µ–∑ text_content")
    print("–±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è description –∫–∞–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ!")
    print("="*70)

if __name__ == "__main__":
    asyncio.run(test_text_lesson_logic())