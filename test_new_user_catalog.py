#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –ø–æ–∫—É–ø–æ–∫
"""
import asyncio
from database.lesson import Lesson, Purchase

async def test_catalog_for_new_user():
    print("=" * 60)
    print("üß™ –ö–ê–¢–ê–õ–û–ì –î–õ–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (–ë–ï–ó –ü–û–ö–£–ü–û–ö)")
    print("=" * 60)
    
    l = Lesson()
    p = Purchase()
    
    # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –ø–æ–∫—É–ø–æ–∫
    new_user_id = 99999
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏
    all_lessons = await l.get_all_lessons(active_only=True)
    print(f"\nüìö –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(all_lessons)}")
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –ø–æ–∫—É–ø–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0)
    user_purchases = await p.get_user_purchases(new_user_id)
    purchased_lesson_ids = {purchase['lesson_id'] for purchase in user_purchases}
    
    print(f"üí≥ –ü–æ–∫—É–ø–æ–∫ —É –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {len(user_purchases)}")
    
    # 3. –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    catalog_lessons = []
    for lesson in all_lessons:
        is_auto_lead_magnet = (
            lesson.get('is_free', False) and 
            lesson.get('title', '').strip() == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
        )
        is_already_purchased = lesson['id'] in purchased_lesson_ids
        
        if not is_auto_lead_magnet and not is_already_purchased:
            catalog_lessons.append(lesson)
    
    print(f"\n‚úÖ –ö–ê–¢–ê–õ–û–ì –î–õ–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:")
    print(f"   –î–æ—Å—Ç—É–ø–Ω–æ —É—Ä–æ–∫–æ–≤: {len(catalog_lessons)}")
    
    for lesson in catalog_lessons:
        lesson_type = "üéÅ –ë–ï–°–ü–õ–ê–¢–ù–´–ô" if lesson.get('is_free', False) else f"üí∞ ${lesson.get('price_usd', 0)}"
        print(f"   ‚Ä¢ {lesson['title']} ({lesson_type})")
    
    # 4. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–π —á—Ç–æ-—Ç–æ –∫—É–ø–∏–ª
    experienced_user_id = 12345
    experienced_purchases = await p.get_user_purchases(experienced_user_id)
    experienced_purchased_ids = {p['lesson_id'] for p in experienced_purchases}
    
    experienced_catalog = []
    for lesson in all_lessons:
        is_auto_lead_magnet = (
            lesson.get('is_free', False) and 
            lesson.get('title', '').strip() == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
        )
        is_already_purchased = lesson['id'] in experienced_purchased_ids
        
        if not is_auto_lead_magnet and not is_already_purchased:
            experienced_catalog.append(lesson)
    
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï:")
    print(f"   –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç: {len(catalog_lessons)} —É—Ä–æ–∫–æ–≤")
    print(f"   –û–ø—ã—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç: {len(experienced_catalog)} —É—Ä–æ–∫–æ–≤")
    print(f"   –†–∞–∑–Ω–∏—Ü–∞: {len(catalog_lessons) - len(experienced_catalog)} —É—Ä–æ–∫–æ–≤")
    
    if len(catalog_lessons) > len(experienced_catalog):
        print("   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –±–æ–ª—å—à–µ —É—Ä–æ–∫–æ–≤.")
    elif len(catalog_lessons) == len(experienced_catalog):
        print("   ‚ÑπÔ∏è –û–ø—ã—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –∫—É–ø–∏–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏.")
    else:
        print("   ‚ùå –ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –ª–æ–≥–∏–∫–æ–π!")
    
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(test_catalog_for_new_user())