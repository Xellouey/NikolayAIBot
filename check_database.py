"""
üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.lesson import Lesson, Purchase, SystemSettings
from database.sql import configure_database
from decimal import Decimal

async def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        configure_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Lesson
        lesson_manager = Lesson()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏
        lessons = await lesson_manager.get_all_lessons(active_only=False)
        print(f"üìö –ù–∞–π–¥–µ–Ω–æ —É—Ä–æ–∫–æ–≤ –≤ –±–∞–∑–µ: {len(lessons)}")
        
        if lessons:
            for lesson in lessons:
                status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if lesson['is_active'] else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
                price_text = "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ" if lesson['is_free'] else f"üí∞ ${lesson['price_usd']}"
                print(f"  ‚Ä¢ ID: {lesson['id']} | {lesson['title']} | {status} | {price_text}")
        else:
            print("‚ö†Ô∏è –£—Ä–æ–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç")
            
        return len(lessons)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return 0

async def create_test_lessons():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤"""
    print("\nüõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤...")
    
    try:
        lesson_manager = Lesson()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Ä–æ–∫–∏
        test_lessons = [
            {
                'title': '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ - –í–≤–µ–¥–µ–Ω–∏–µ',
                'description': '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π',
                'price_usd': Decimal('0.00'),
                'is_free': True,
                'is_active': True,
                'content_type': 'text',
                'text_content': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫—É—Ä—Å! –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫.',
                'preview_text': '–í —ç—Ç–æ–º —É—Ä–æ–∫–µ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –æ—Å–Ω–æ–≤–∞–º–∏...'
            },
            {
                'title': 'Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
                'description': '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python',
                'price_usd': Decimal('29.99'),
                'is_free': False,
                'is_active': True,
                'content_type': 'text',
                'text_content': 'Python - —ç—Ç–æ –º–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è...',
                'preview_text': '–ò–∑—É—á–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ü–∏–∫–ª—ã, —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ'
            },
            {
                'title': '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å React',
                'description': '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                'price_usd': Decimal('49.99'),
                'is_free': False,
                'is_active': True,
                'content_type': 'text', 
                'text_content': 'React - —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...',
                'preview_text': '–ù–∞—É—á–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ —Ö—É–∫–∞–º–∏'
            }
        ]
        
        created_count = 0
        for lesson_data in test_lessons:
            try:
                lesson = await lesson_manager.create_lesson(**lesson_data)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —É—Ä–æ–∫: {lesson_data['title']}")
                created_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∫–∞ '{lesson_data['title']}': {e}")
        
        print(f"\nüìö –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤: {created_count}")
        return created_count
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤: {e}")
        return 0

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ —É—Ä–æ–∫–æ–≤...")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    lesson_count = await check_database()
    
    # –ï—Å–ª–∏ —É—Ä–æ–∫–æ–≤ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ
    if lesson_count == 0:
        created = await create_test_lessons()
        if created > 0:
            print("\nüîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            await check_database()
    
    print("\n" + "=" * 60)
    print("üéØ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!")
    print("üí° –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ —É—Ä–æ–∫–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ")

if __name__ == '__main__':
    asyncio.run(main())