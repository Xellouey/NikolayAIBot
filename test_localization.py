"""
Test script for localization system
"""
from localization import Localization, get_text

def test_localization():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏\n")
    print("=" * 50)
    
    # Test Russian (default)
    print("\nüá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):")
    print(f"  welcome: {get_text('welcome', 'ru')}")
    print(f"  btn_catalog: {get_text('btn_catalog', 'ru')}")
    print(f"  btn_back: {get_text('btn_back', 'ru')}")
    
    # Test English
    print("\nüá¨üáß English:")
    print(f"  welcome: {get_text('welcome', 'en')}")
    print(f"  btn_catalog: {get_text('btn_catalog', 'en')}")
    print(f"  btn_back: {get_text('btn_back', 'en')}")
    
    # Test Spanish
    print("\nüá™üá∏ Espa√±ol:")
    print(f"  welcome: {get_text('welcome', 'es')}")
    print(f"  btn_catalog: {get_text('btn_catalog', 'es')}")
    print(f"  btn_back: {get_text('btn_back', 'es')}")
    
    # Test formatting
    print("\nüìù –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"  lesson_price (ru): {get_text('lesson_price', 'ru', price=100)}")
    print(f"  lesson_price (en): {get_text('lesson_price', 'en', price=100)}")
    
    # Test adding new translation
    print("\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞:")
    success = Localization.set_translation('welcome', 'de', 'üëã Willkommen in der KI-Schule!')
    if success:
        print(f"  ‚úÖ –ù–µ–º–µ—Ü–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω")
        print(f"  welcome (de): {get_text('welcome', 'de')}")
    else:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞")
    
    # Show all available keys
    print("\nüîë –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏:")
    keys = Localization.get_all_keys()
    for i, key in enumerate(keys, 1):
        print(f"  {i}. {key}")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_localization()
