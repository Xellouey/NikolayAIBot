#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫) 
–Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ —É—Ä–æ–∫–æ–≤
"""
import asyncio
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–æ–≤
test_lessons = [
    {
        'id': 1,
        'title': '–ü–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ 1',
        'price_usd': '10.00',
        'is_free': False,
        'is_active': True
    },
    {
        'id': 2, 
        'title': '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫',
        'price_usd': '0.00',
        'is_free': True,
        'is_active': True
    },
    {
        'id': 3,
        'title': '–ü–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ 2',
        'price_usd': '15.00',
        'is_free': False,
        'is_active': True
    }
]

def filter_paid_lessons(lessons):
    """–§–∏–ª—å—Ç—Ä—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ - –∫–∞–∫ –≤ show_catalog"""
    return [lesson for lesson in lessons if not lesson.get('is_free', False)]

def test_catalog_filter():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞...\n")
    
    print(f"üìö –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤: {len(test_lessons)}")
    for lesson in test_lessons:
        free_label = " (–ë–ï–°–ü–õ–ê–¢–ù–´–ô)" if lesson['is_free'] else ""
        print(f"  - {lesson['title']}{free_label}")
    
    print("\nüîç –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä (—É–±–∏—Ä–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ)...")
    paid_lessons = filter_paid_lessons(test_lessons)
    
    print(f"\nüí∞ –ü–ª–∞—Ç–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞: {len(paid_lessons)}")
    for lesson in paid_lessons:
        print(f"  - {lesson['title']} (${lesson['price_usd']})")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    assert len(paid_lessons) == 2, "–î–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è 2 –ø–ª–∞—Ç–Ω—ã—Ö —É—Ä–æ–∫–∞"
    assert all(not lesson.get('is_free', False) for lesson in paid_lessons), "–í—Å–µ —É—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–ª–∞—Ç–Ω—ã–º–∏"
    assert not any(lesson['id'] == 2 for lesson in paid_lessons), "–õ–∏–¥-–º–∞–≥–Ω–∏—Ç (id=2) –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ"
    
    print("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –õ–∏–¥-–º–∞–≥–Ω–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞.")
    return True

if __name__ == "__main__":
    try:
        test_catalog_filter()
    except AssertionError as e:
        print(f"\n‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: {e}")
        sys.exit(1)
