#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ.
–ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã.
"""
import asyncio
from database.lesson import Lesson

async def activate_lessons():
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏"""
    print("üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤...")
    
    l = Lesson()
    all_lessons = await l.get_all_lessons(active_only=False)
    
    inactive_count = 0
    for lesson in all_lessons:
        if not lesson.get('is_active', True):
            success = await l.update_lesson(lesson['id'], is_active=True)
            if success:
                print(f"  ‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —É—Ä–æ–∫ ID {lesson['id']}: {lesson['title']}")
                inactive_count += 1
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É—Ä–æ–∫–∞ ID {lesson['id']}")
    
    print(f"‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É—Ä–æ–∫–æ–≤: {inactive_count}")
    return inactive_count

async def test_catalog_filtering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞...")
    
    l = Lesson()
    all_lessons = await l.get_all_lessons(active_only=True)
    
    print(f"üìö –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {len(all_lessons)}")
    for lesson in all_lessons:
        free_text = "üÜì –ë–ï–°–ü–õ–ê–¢–ù–´–ô" if lesson.get('is_free', False) else f"üí∞ ${lesson.get('price_usd', 0)}"
        print(f"  - ID {lesson['id']}: {lesson['title']} ({free_text})")
    
    # –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: –∏—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã
    # –õ–∏–¥-–º–∞–≥–Ω–∏—Ç –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
    catalog_lessons = []
    excluded_count = 0
    
    for lesson in all_lessons:
        # –ò—Å–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã
        is_auto_lead_magnet = (
            lesson.get('is_free', False) and 
            lesson.get('title', '').strip() == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫"
        )
        
        if not is_auto_lead_magnet:
            catalog_lessons.append(lesson)
        else:
            excluded_count += 1
            print(f"    üö´ –ò—Å–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–∏–¥-–º–∞–≥–Ω–∏—Ç: {lesson['title']}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
    print(f"  üìö –£—Ä–æ–∫–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: {len(catalog_lessons)}")
    print(f"  üö´ –ò—Å–∫–ª—é—á–µ–Ω–æ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–æ–≤: {excluded_count}")
    
    if catalog_lessons:
        print(f"\n‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å:")
        for lesson in catalog_lessons:
            free_text = "üÜì –ë–ï–°–ü–õ–ê–¢–ù–´–ô" if lesson.get('is_free', False) else f"üí∞ ${lesson.get('price_usd', 0)}"
            print(f"  - {lesson['title']} ({free_text})")
    else:
        print(f"\n‚ùå –ö–∞—Ç–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º!")
    
    return catalog_lessons

async def main():
    print("=" * 60)
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–¢–ê–õ–û–ì–ê –ë–ï–°–ü–õ–ê–¢–ù–´–• –£–†–û–ö–û–í")
    print("=" * 60)
    
    # 1. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —É—Ä–æ–∫–∏
    await activate_lessons()
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    await test_catalog_filtering()
    
    print("\n" + "=" * 60)
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üí° –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ handlers/shop.py")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(main())